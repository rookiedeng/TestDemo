一、介绍
职责链模式（Chain of responsibility）是使多个对象都有机会处理请求，从而避免请求的发送者和接受者之间的耦合关系。
将这个对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理他为止。
也就是说，请求以后，从第一个对象开始，链中收到请求的对象要么亲自处理它，要么转发给链中的下一个候选者。
提交请求的对象并不明确知道哪一个对象将会处理它——也就是该请求有一个隐式的接受者（implicit receiver）。
根据运行时刻，任一候选者都可以响应相应的请求，候选者的数目是任意的，你可以在运行时刻决定哪些候选者参与到链中。

二、正文：见代码

三、总结
职责链模式经常和组合模式一起使用，这样一个构件的父构件可以作为其继任者。
同时，DOM里的事件冒泡机制也和此好像有点类似，比如点击一个按钮以后，如果不阻止冒泡，其click事件将一直向父元素冒泡，
利用这个机制也可以处理很多相关的问题，比如本系列设计模式享元模式里的《例1：事件集中管理》的示例代码。
参考代码：https://gist.github.com/1174982
http://www.cnblogs.com/fxycm/archive/2015/10/21/4898071.html